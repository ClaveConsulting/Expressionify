trigger:
  - master
pool:
  name: 'Azure Pipelines'
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - task: NuGetToolInstaller@1
    displayName: 'install latest nuget'
    inputs:
      checkLatest: true

  - task: GitVersion@5
    displayName: 'GitVersion'
    inputs:
      updateAssemblyInfo: true
      preferBundledVersion: false

  - script: echo %Action%%BuildVersion%
    displayName: 'Set build version'
    env:
      Action: '##vso[build.updatebuildnumber]'
      BuildVersion: $(GitVersion.SemVer)

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: restore
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build $(buildConfiguration)'
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test $(buildConfiguration)'
    inputs:
      command: test
      projects: '**/*.Tests.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack $(buildConfiguration)'
    inputs:
      command: pack
      packagesToPack: '**/*.csproj'
      includeSymbols: true
      versioningScheme: byEnvVar
      versionEnvVar: GitVersion.SemVer
#
#  - task: NuGetCommand@2
#    displayName: 'nuget push $(buildConfiguration)'
#    inputs:
#      command: push
#      nuGetFeedType: external
#      externalEndpoint: Nuget
#
#  - script: |
#      git config user.name AzureDevOps
#      git config user.email azure@clave.no
#      git tag "v$(GitVersion.SemVer)" -m "v$(GitVersion.SemVer)"
#      git push origin "v$(GitVersion.SemVer)"
#    displayName: 'git push tag'